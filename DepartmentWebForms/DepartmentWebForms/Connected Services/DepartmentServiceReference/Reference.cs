//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DepartmentWebForms.DepartmentServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeparmentDetails", Namespace="http://schemas.datacontract.org/2004/07/DeparmentCRUD")]
    [System.SerializableAttribute()]
    public partial class DeparmentDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DepartmentCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DepartmentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DepartmentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IsActiveField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DepartmentCode {
            get {
                return this.DepartmentCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentCodeField, value) != true)) {
                    this.DepartmentCodeField = value;
                    this.RaisePropertyChanged("DepartmentCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DepartmentId {
            get {
                return this.DepartmentIdField;
            }
            set {
                if ((this.DepartmentIdField.Equals(value) != true)) {
                    this.DepartmentIdField = value;
                    this.RaisePropertyChanged("DepartmentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DepartmentName {
            get {
                return this.DepartmentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentNameField, value) != true)) {
                    this.DepartmentNameField = value;
                    this.RaisePropertyChanged("DepartmentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DepartmentServiceReference.IDepartmentService")]
    public interface IDepartmentService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepartmentService/InsertORUpdateDepartmentDetails", ReplyAction="http://tempuri.org/IDepartmentService/InsertORUpdateDepartmentDetailsResponse")]
        string InsertORUpdateDepartmentDetails(DepartmentWebForms.DepartmentServiceReference.DeparmentDetails deparmentDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepartmentService/InsertORUpdateDepartmentDetails", ReplyAction="http://tempuri.org/IDepartmentService/InsertORUpdateDepartmentDetailsResponse")]
        System.Threading.Tasks.Task<string> InsertORUpdateDepartmentDetailsAsync(DepartmentWebForms.DepartmentServiceReference.DeparmentDetails deparmentDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepartmentService/GetDepartments", ReplyAction="http://tempuri.org/IDepartmentService/GetDepartmentsResponse")]
        DepartmentWebForms.DepartmentServiceReference.DeparmentDetails[] GetDepartments();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepartmentService/GetDepartments", ReplyAction="http://tempuri.org/IDepartmentService/GetDepartmentsResponse")]
        System.Threading.Tasks.Task<DepartmentWebForms.DepartmentServiceReference.DeparmentDetails[]> GetDepartmentsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepartmentService/GetDepartmentByID", ReplyAction="http://tempuri.org/IDepartmentService/GetDepartmentByIDResponse")]
        DepartmentWebForms.DepartmentServiceReference.DeparmentDetails GetDepartmentByID(string departmentCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepartmentService/GetDepartmentByID", ReplyAction="http://tempuri.org/IDepartmentService/GetDepartmentByIDResponse")]
        System.Threading.Tasks.Task<DepartmentWebForms.DepartmentServiceReference.DeparmentDetails> GetDepartmentByIDAsync(string departmentCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepartmentService/GetDepartmentBySearch", ReplyAction="http://tempuri.org/IDepartmentService/GetDepartmentBySearchResponse")]
        DepartmentWebForms.DepartmentServiceReference.DeparmentDetails[] GetDepartmentBySearch(string searchValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepartmentService/GetDepartmentBySearch", ReplyAction="http://tempuri.org/IDepartmentService/GetDepartmentBySearchResponse")]
        System.Threading.Tasks.Task<DepartmentWebForms.DepartmentServiceReference.DeparmentDetails[]> GetDepartmentBySearchAsync(string searchValue);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDepartmentServiceChannel : DepartmentWebForms.DepartmentServiceReference.IDepartmentService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DepartmentServiceClient : System.ServiceModel.ClientBase<DepartmentWebForms.DepartmentServiceReference.IDepartmentService>, DepartmentWebForms.DepartmentServiceReference.IDepartmentService {
        
        public DepartmentServiceClient() {
        }
        
        public DepartmentServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DepartmentServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DepartmentServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DepartmentServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string InsertORUpdateDepartmentDetails(DepartmentWebForms.DepartmentServiceReference.DeparmentDetails deparmentDetails) {
            return base.Channel.InsertORUpdateDepartmentDetails(deparmentDetails);
        }
        
        public System.Threading.Tasks.Task<string> InsertORUpdateDepartmentDetailsAsync(DepartmentWebForms.DepartmentServiceReference.DeparmentDetails deparmentDetails) {
            return base.Channel.InsertORUpdateDepartmentDetailsAsync(deparmentDetails);
        }
        
        public DepartmentWebForms.DepartmentServiceReference.DeparmentDetails[] GetDepartments() {
            return base.Channel.GetDepartments();
        }
        
        public System.Threading.Tasks.Task<DepartmentWebForms.DepartmentServiceReference.DeparmentDetails[]> GetDepartmentsAsync() {
            return base.Channel.GetDepartmentsAsync();
        }
        
        public DepartmentWebForms.DepartmentServiceReference.DeparmentDetails GetDepartmentByID(string departmentCode) {
            return base.Channel.GetDepartmentByID(departmentCode);
        }
        
        public System.Threading.Tasks.Task<DepartmentWebForms.DepartmentServiceReference.DeparmentDetails> GetDepartmentByIDAsync(string departmentCode) {
            return base.Channel.GetDepartmentByIDAsync(departmentCode);
        }
        
        public DepartmentWebForms.DepartmentServiceReference.DeparmentDetails[] GetDepartmentBySearch(string searchValue) {
            return base.Channel.GetDepartmentBySearch(searchValue);
        }
        
        public System.Threading.Tasks.Task<DepartmentWebForms.DepartmentServiceReference.DeparmentDetails[]> GetDepartmentBySearchAsync(string searchValue) {
            return base.Channel.GetDepartmentBySearchAsync(searchValue);
        }
    }
}
